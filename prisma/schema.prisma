generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

//몽고디비의 모델 생성방법
model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId //아이디
  name           String //이름
  image          String? //이미지
  email          String?   @unique //이메일
  emailVerified  DateTime? //이메일 확인
  hashedPassword String? //패스워드 (소셜로 로그인하면 필요없으니 옵셔널)
  createdAt      DateTime  @default(now()) //생성날짜
  updateAt       DateTime  @updatedAt //업데이트날짜
  favoriteIds    String[]  @db.ObjectId //즐겨찾기 id들
  sessions       Session[] //세션배열
  accounts       Account[] //어카운트 배열
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId //account의 id
  type              String
  provider          String //소셜로그인 타입
  providerAccountId String //소셜로그인 아이디
  refresh_token     String? @db.String //소셜로그인 리플래쉬 토큰
  access_token      String? @db.String //엑세스토큰
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String?  @db.ObjectId
  expires      DateTime

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Movie {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  videoUrl     String
  thumbnailUrl String
  genre        String
  duration     String
}
